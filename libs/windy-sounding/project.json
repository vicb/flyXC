{
  "name": "windy-sounding",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/windy-sounding/src",
  "projectType": "library",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@nx/vite:build",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "outputPath": "dist/libs/windy-sounding"
      },
      "configurations": {
        "development": {
          "mode": "development"
        },
        "production": {
          "mode": "production"
        }
      }
    },
    "serve": {
      "executor": "@nx/vite:dev-server",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "windy-sounding:build"
      },
      "configurations": {
        "development": {
          "buildTarget": "windy-sounding:build:development",
          "hmr": true
        },
        "production": {
          "buildTarget": "windy-sounding:build:production",
          "hmr": false
        }
      }
    },
    "preview": {
      "executor": "@nx/vite:preview-server",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "windy-sounding:build"
      },
      "configurations": {
        "development": {
          "buildTarget": "windy-sounding:build:development",
          "hmr": true
        },
        "production": {
          "buildTarget": "windy-sounding:build:production",
          "hmr": false
        }
      },
      "dependsOn": ["build"]
    },
    "prepare": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "rm -rf dist/libs/windy-sounding",
          "npx nx build windy-sounding --configuration=production --skip-nx-cache",
          "npx nx build windy-sounding --configuration=development --skip-nx-cache",
          "BUILD_PLUGIN_CONFIG=true npx nx build windy-sounding --configuration production --skip-nx-cache",
          "node libs/windy-sounding/generate-manifest.js dist/libs/windy-sounding"
        ],
        "parallel": false
      }
    },
    "upload": {
      "executor": "nx:run-commands",
      "dependsOn": ["prepare"],
      "options": {
        "commands": ["libs/windy-sounding/upload.sh"],
        "parallel": false
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "libs/windy-sounding/jest.config.ts"
      }
    }
  }
}
